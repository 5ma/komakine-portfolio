---
import IconFolder from "@components/svg/IconFolder.astro";
import IconPlaylist from "@components/svg/IconPlaylist.astro";

interface Props {
  title: string;
  date: `${number}.${number}.${number}`;
  type: "folder" | "playlist";
  href?: string;
}

const { title, date, type, href } = Astro.props;
---

{
  type === "folder" ? (
    <a class="wrapper link-pjax" href={href}>
      <div class="icon">
        <IconFolder label="フォルダアイコン" />
      </div>
      <div class="title">{title}</div>
      <div class="date">{date}</div>
      <div class="action">View</div>
    </a>
  ) : (
    <button class="wrapper" type="button" data-modal-open="playlist">
      <div class="icon">
        <IconPlaylist label="iTunesアイコン" />
      </div>
      <div class="title" data-modal-title>
        {title}
      </div>
      <div class="date">{date}</div>
      <div class="action">View</div>
    </button>
  )
}

<style lang="scss">
  @use "sass:math";
  @use "@styles/global/" as *;

  .wrapper {
    position: relative;
    display: block;
    width: 100%;
    padding: 0;
    margin: 0;
    font-weight: 500;
    text-align: center;
    text-decoration: none;
    background: none;
    border: 0;
    box-sizing: border-box;

    @include sp {
      padding: 15px;
    }

    :global(#{$listViewMode}) & {
      display: grid;
      gap: 1px 6%;
      grid-template-columns: percentage(math.div(130, 670)) 1fr;
      grid-template-areas:
        "icon title"
        "icon date";
      align-items: center;
      padding: 21px 0;
      text-align: left;

      @include pc {
        gap: 0 50px;
        grid-template-columns: clamp(
            130px,
            percentage(math.div(160, 1240)),
            160px * 1.5
          ) 1fr auto auto;
        grid-template-areas: "icon title date action";
        padding: 38px 0;
      }

      @include hover {
        &:hover {
          background: rgb(var(--color-selection-blue-rgb) / 0.5);
        }
      }
    }

    &[href],
    &:not(:disabled) {
      cursor: pointer;
    }
  }

  .title {
    margin-top: 1px;
    @include fz-vw(13, 375, 375 * 2, 375 * $font_shrink_sp);
    line-height: 1.3;
    letter-spacing: 0.03em;
    transition: color cubic-bezier(0.83, 0, 0.17, 1) 1s;

    @include pc {
      margin-top: 0;
      @include fz-vw(16, 1400, 1400 * 2, 1400 * 0.8);
    }

    @include hover {
      .wrapper:hover & {
        text-decoration: underline;

        :global(#{$listViewMode}) & {
          text-decoration-thickness: 3px;
          text-underline-offset: 4px;
        }
      }
    }

    :global(#{$listViewMode}) & {
      width: fit-content;
      margin-top: 0;
      grid-area: title;
      @include fz-vw(30, 375, 375 * 2, 375 * $font_shrink_sp);
      line-height: 1.15;
      letter-spacing: 0.02em;

      @include sp {
        align-self: end;
        padding-bottom: 1%;
      }

      @include pc {
        @include fz-vw(82, 1400, 1400, $breakpointPc);
        letter-spacing: normal;
      }
    }
  }

  .date {
    display: none;

    :global(#{$listViewMode}) & {
      display: block;
      grid-area: date;
      @include fz-vw(9, 375, 375 * 2, 375 * $font_shrink_sp);

      @include sp {
        align-self: start;
      }

      @include pc {
        @include fz-vw(18, 1400, 1400, $breakpointPc);
        letter-spacing: 0.02em;
      }
    }
  }

  .action {
    display: none;
    text-transform: uppercase;

    :global(#{$listViewMode}) & {
      @include pc {
        display: block;
        grid-area: action;
        min-width: 4.7em;
        @include fz-vw(22, 1400, 1400, $breakpointPc);
        text-align: right;
      }
    }
  }

  .icon {
    position: relative;
    display: grid;
    place-items: center;
    aspect-ratio: 1 / 1;

    @include hover {
      &::before {
        position: absolute;
        top: 2%;
        right: -5%;
        bottom: 3%;
        left: -5%;
        background: transparent;
        border-radius: 8px;
        content: "";
        box-sizing: border-box;
        pointer-events: none;
        transition: 0.1s;

        :global(#{$listViewMode}) & {
          top: 0;
          right: -9%;
          bottom: 0;
          left: -9%;
          opacity: 0;
        }
      }

      .wrapper:hover & {
        &::before {
          background: rgb(var(--color-selection-blue-rgb) / 0.5);
        }
      }
    }

    :global(svg) {
      position: relative;
      width: 100%;
      height: 100%;
      object-fit: contain;
      fill: var(--color-theme-current);
      transition: fill cubic-bezier(0.83, 0, 0.17, 1) 1s;
    }

    :global(#{$listViewMode}) & {
      grid-area: icon;

      &::before {
        content: none;
      }
    }
  }
</style>
