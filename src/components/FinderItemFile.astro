---
import IconTxt from '@components/svg/IconTxt.astro';
import IconJson from '@components/svg/IconJson.astro';

interface Props {
  title: string
  date: `${number}.${number}.${number}`
  type: 'text' | 'json'
  href?: string
}

const { title, date, type, href } = Astro.props;
const InnerElement = type === 'json' ? 'a' : 'button';
---

<li class="item">
  {type === 'json' ? (
    <a href={href} class="inner">
      <div class="icon">
        <IconJson label='jsonファイルのアイコン' />
      </div>
      <div class="title">{title}</div>
      <div class="date">{date}</div>
      <div class="action">View</div>
    </a>
  ) : (
    <button type="button" class="inner">
      <div class="icon">
        <IconTxt label='テキストファイルのアイコン' />
      </div>
      <div class="title">{title}</div>
      <div class="date">{date}</div>
      <div class="action">Read</div>
    </button>
  )}
</li>

<style lang="scss">
  @use 'sass:math';
  @use "@styles/global/" as *;

  .item {
    text-align: center;
  }

  .inner {
    position: relative;
    display: block;
    width: 100%;
    padding: 0;
    margin: 0;
    text-decoration: none;
    background: none;
    border: 0;
    box-sizing: border-box;

    @include sp {
      padding: 15px;
    }

    &[href],
    &:not(:disabled) {
      cursor: pointer;
    }
  }

  .title {
    margin-top: 1px;
    @include fz-vw(13, 375, 375 * 2, 375 * $font_shrink_sp);
    font-weight: 500;
    line-height: 1.3;
    letter-spacing: 0.03em;

    @include pc {
      margin-top: 0;
      @include fz-vw(16, 1400, 1400 * 2, 1400 * 0.8);
    }
  }

  .date {
    display: none;
  }

  .action {
    display: none;
  }

  .icon {
    display: grid;
    place-items: center;
    aspect-ratio: 1 / 1;
    :global(svg) {
      width: 83.5%;
      height: 83.5%;
      object-fit: contain;
      fill: var(--color-theme-current);

      @include pc {
        width: 84%;
        height: 84%;
      }
    }
  }
</style>